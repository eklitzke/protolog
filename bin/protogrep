#!/usr/bin/env python

import optparse
import re

import protolog

def pprint_pb(obj):
    d = {}
    for k, v in type(obj).__dict__.iteritems():
        if not callable(v) and not k.startswith('_'):
            d[k] = getattr(obj, k)
    print d

if __name__ == '__main__':
    parser = optparse.OptionParser()
    opts, args = parser.parse_args()
    if len(args) != 4:
        parser.error('usage: protogrep <classname> <fieldname> <fieldregex> <filename>')
    classname, fieldname, fieldregex, fname = args
    fieldregex = re.compile(fieldregex)
    file_obj = open(fname, 'rb')

    module_name, attribute = classname.rsplit('.', 1)
    
    things = __import__(module_name, {}, {}, [attribute])
    cls = getattr(things, attribute)

    decoder = protolog.ProtocolBufferDecoder(file_obj, cls)
    for ent in decoder:
        val = str(getattr(ent, fieldname, ''))
        if fieldregex.search(val):
            pprint_pb(ent)
